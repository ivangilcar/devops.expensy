name: CI/CD | Expensy App

on:
  push:
    branches: [main]
    paths:
      - 'expensy_backend/**'
      - 'expensy_frontend/**'
      - 'k8s/**'
  pull_request:
    branches: [main]

env:
  IMAGE_NAME_BACKEND: 160180/devopsexpensy_backend
  IMAGE_NAME_FRONTEND: 160180/expensy_frontend
  K8S_NAMESPACE: devops-expensy

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Backend Build
    - name: Install backend dependencies
      run: |
        cd expensy_backend
        npm ci --only=production

    # Frontend Build
    - name: Install frontend dependencies
      run: |
        cd expensy_frontend
        npm ci --only=production

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install backend dev dependencies
      run: |
        cd expensy_backend
        npm ci

    - name: Run backend tests
      run: |
        cd expensy_backend
        npm test --if-present

    - name: Install frontend dev dependencies
      run: |
        cd expensy_frontend
        npm ci

    - name: Run frontend tests
      run: |
        cd expensy_frontend
        npm test --if-present

  docker:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      backend_tag: ${{ steps.meta.outputs.backend_tag }}
      frontend_tag: ${{ steps.meta.outputs.frontend_tag }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Define image tags
      id: meta
      run: |
        echo "backend_tag=${{ env.IMAGE_NAME_BACKEND }}:${{ github.sha }}" >> $GITHUB_OUTPUT
        echo "frontend_tag=${{ env.IMAGE_NAME_FRONTEND }}:${{ github.sha }}" >> $GITHUB_OUTPUT

    - name: Build & Push Backend
      run: |
        docker build -t ${{ steps.meta.outputs.backend_tag }} -t ${{ env.IMAGE_NAME_BACKEND }}:latest ./expensy_backend
        docker push ${{ steps.meta.outputs.backend_tag }}
        docker push ${{ env.IMAGE_NAME_BACKEND }}:latest

    - name: Build & Push Frontend
      run: |
        docker build -t ${{ steps.meta.outputs.frontend_tag }} -t ${{ env.IMAGE_NAME_FRONTEND }}:latest ./expensy_frontend
        docker push ${{ steps.meta.outputs.frontend_tag }}
        docker push ${{ env.IMAGE_NAME_FRONTEND }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Configure K8s context
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > ~/.kube/config
        chmod 600 ~/.kube/config
        kubectl config use-context ${{ secrets.K8S_CONTEXT || 'default' }}

    - name: Deploy Backend
      run: |
        kubectl set image deployment/backend-pod backend=${{ needs.docker.outputs.backend_tag }} -n ${{ env.K8S_NAMESPACE }}
        kubectl rollout status deployment/backend-pod -n ${{ env.K8S_NAMESPACE }} --timeout=300s

    - name: Deploy Frontend
      run: |
        kubectl set image deployment/frontend-pod frontend=${{ needs.docker.outputs.frontend_tag }} -n ${{ env.K8S_NAMESPACE }}
        kubectl rollout status deployment/frontend-pod -n ${{ env.K8S_NAMESPACE }} --timeout=300s

    - name: Verify services & ingress
      run: |
        kubectl get pods,svc,ingress -n ${{ env.K8S_NAMESPACE }}

    - name: Health check
      run: |
        sleep 30
        curl -f http://expensy.ivanp3.com/ || exit 1
        echo "Deployment successful!"