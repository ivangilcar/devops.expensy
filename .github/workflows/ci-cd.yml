name: CI/CD - Expensy App

on:
  push:
    branches: [ main ]
    paths:
      - 'expensy_backend/**'
      - 'expensy_frontend/**'
      - 'k8s/**'
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME_BACKEND: 160180/devopsexpensy_backend
  IMAGE_NAME_FRONTEND: 160180/expensy_frontend
  K8S_NAMESPACE: devops-expensy

jobs:
  ci-phase:
    runs-on: ubuntu-latest
    
    outputs:
      backend_tag: ${{ steps.meta.outputs.backend_tag }}
      frontend_tag: ${{ steps.meta.outputs.frontend_tag }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Define image tags
      id: meta
      run: |
        echo "backend_tag=${{ env.IMAGE_NAME_BACKEND }}:${{ github.sha }}" >> $GITHUB_OUTPUT
        echo "frontend_tag=${{ env.IMAGE_NAME_FRONTEND }}:${{ github.sha }}" >> $GITHUB_OUTPUT

    # Build Backend
    - name: Build & Push Backend
      uses: docker/build-push-action@v5
      with:
        context: ./expensy_backend
        push: true
        tags: |
          ${{ steps.meta.outputs.backend_tag }}
          ${{ env.IMAGE_NAME_BACKEND }}:latest

    # Run Backend tests
    - name: Run Backend tests
      run: docker run --rm ${{ steps.meta.outputs.backend_tag }} npm test --if-present

    # Build Frontend
    - name: Build & Push Frontend
      uses: docker/build-push-action@v5
      with:
        context: ./expensy_frontend
        push: true
        tags: |
          ${{ steps.meta.outputs.frontend_tag }}
          ${{ env.IMAGE_NAME_FRONTEND }}:latest

    # Run Frontend tests
    - name: Run Frontend tests
      run: docker run --rm ${{ steps.meta.outputs.frontend_tag }} npm test --if-present

  cd-phase:
    runs-on: ubuntu-latest
    needs: ci-phase
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Configure K8s context
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
        chmod 600 ~/.kube/config

    - name: Deploy Backend
      run: |
        kubectl set image deployment/backend-pod backend=${{ needs.ci-phase.outputs.backend_tag }} -n ${{ env.K8S_NAMESPACE }}
        kubectl rollout status deployment/backend-pod -n ${{ env.K8S_NAMESPACE }} --timeout=300s

    - name: Deploy Frontend
      run: |
        kubectl set image deployment/frontend-pod frontend=${{ needs.ci-phase.outputs.frontend_tag }} -n ${{ env.K8S_NAMESPACE }}
        kubectl rollout status deployment/frontend-pod -n ${{ env.K8S_NAMESPACE }} --timeout=300s

    - name: Verify services & ingress
      run: |
        kubectl get pods,svc,ingress -n ${{ env.K8S_NAMESPACE }}

    - name: Health check
      run: |
        sleep 20
        curl -f http://your-ingress-domain.com || exit 1
